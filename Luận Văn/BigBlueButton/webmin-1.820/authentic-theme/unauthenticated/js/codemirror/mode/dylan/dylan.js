(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("dylan",function(l){var k={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};k.otherDefinition=k.unnamedDefinition.concat(k.namedDefinition).concat(k.otherParameterizedDefinition);k.definition=k.typeParameterizedDefinition.concat(k.otherDefinition);k.parameterizedDefinition=k.typeParameterizedDefinition.concat(k.otherParameterizedDefinition);k.simpleDefinition=k.constantSimpleDefinition.concat(k.variableSimpleDefinition).concat(k.otherSimpleDefinition);k.keyword=k.statement.concat(k.separator).concat(k.other);var n="[-_a-zA-Z?!*@<>$%]+";var f=new RegExp("^"+n);var d={symbolKeyword:n+":",symbolClass:"<"+n+">",symbolGlobal:"\\*"+n+"\\*",symbolConstant:"\\$"+n};var j={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var i in d){if(d.hasOwnProperty(i)){d[i]=new RegExp("^"+d[i])}}d.keyword=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var o={};o.keyword="keyword";o.definition="def";o.simpleDefinition="def";o.signalingCalls="builtin";var c={};var h={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(p){k[p].forEach(function(q){c[q]=p;h[q]=o[p]})});function b(r,q,p){q.tokenize=p;return p(r,q)}function e(t,s){var q=t.peek();if(q=="'"||q=='"'){t.next();return b(t,s,m(q,"string"))}else{if(q=="/"){t.next();if(t.eat("*")){return b(t,s,g)}else{if(t.eat("/")){t.skipToEnd();return"comment"}else{t.skipTo(" ");return"operator"}}}else{if(/\d/.test(q)){t.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return"number"}else{if(q=="#"){t.next();q=t.peek();if(q=='"'){t.next();return b(t,s,m('"',"string-2"))}else{if(q=="b"){t.next();t.eatWhile(/[01]/);return"number"}else{if(q=="x"){t.next();t.eatWhile(/[\da-f]/i);return"number"}else{if(q=="o"){t.next();t.eatWhile(/[0-7]/);return"number"}else{t.eatWhile(/[-a-zA-Z]/);return"keyword"}}}}}else{if(t.match("end")){return"keyword"}}}}}for(var p in d){if(d.hasOwnProperty(p)){var r=d[p];if((r instanceof Array&&r.some(function(u){return t.match(u)}))||t.match(r)){return j[p]}}}if(t.match("define")){return"def"}else{t.eatWhile(/[\w\-]/);if(c[t.current()]){return h[t.current()]}else{if(t.current().match(f)){return"variable"}else{t.next();return"variable-2"}}}}function g(s,r){var p=false,q;while((q=s.next())){if(q=="/"&&p){r.tokenize=e;break}p=(q=="*")}return"comment"}function m(p,q){return function(u,t){var s,r=false;while((s=u.next())!=null){if(s==p){r=true;break}}if(r){t.tokenize=e}return q}}return{startState:function(){return{tokenize:e,currentIndent:0}},token:function(r,q){if(r.eatSpace()){return null}var p=q.tokenize(r,q);return p},blockCommentStart:"/*",blockCommentEnd:"*/"}});a.defineMIME("text/x-dylan","dylan")});